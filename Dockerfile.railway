
# Stage 1. Install dependencies
FROM php:8.3.0-fpm-alpine AS php-fpm
RUN set -eux; \
    apk --update add --no-cache --virtual .build-deps \
    $PHPIZE_DEPS \
    freetype-dev \
    icu-dev \
    libjpeg-turbo-dev \
    libpng-dev \
    libwebp-dev \
    libzip-dev \
    nginx \
    supervisor \
    less \
    bash \
    ;

RUN set -eux; \
    docker-php-ext-configure gd --with-freetype --with-jpeg --with-webp

RUN set -eux; \
    docker-php-ext-install \
    mysqli \
    pdo \
    pdo_mysql \
    opcache \
    bcmath \
    exif \
    gd \
    intl \
    zip

RUN set -eux; \
    err="$(php --version 3>&1 1>&2 2>&3)"; \
    [ -z "$err" ]


# see https://www.php.net/manual/en/opcache.installation.php
# see https://www.php.net/manual/en/opcache.configuration.php
RUN set -eux; \
    docker-php-ext-enable opcache; \
    { \
    echo 'opcache.memory_consumption=128'; \
    echo 'opcache.interned_strings_buffer=8'; \
    echo 'opcache.max_accelerated_files=4000'; \
    echo 'opcache.revalidate_freq=2'; \
    } > /usr/local/etc/php/conf.d/opcache-recommended.ini
# https://wordpress.org/support/article/editing-wp-config-php/#configure-error-logging
RUN { \
    # https://www.php.net/manual/en/errorfunc.constants.php
    # https://github.com/docker-library/wordpress/issues/420#issuecomment-517839670
    echo 'error_reporting = E_ERROR | E_WARNING | E_PARSE | E_CORE_ERROR | E_CORE_WARNING | E_COMPILE_ERROR | E_COMPILE_WARNING | E_RECOVERABLE_ERROR'; \
    echo 'display_errors = Off'; \
    echo 'display_startup_errors = Off'; \
    echo 'log_errors = On'; \
    echo 'error_log = /dev/stderr'; \
    echo 'log_errors_max_len = 1024'; \
    echo 'ignore_repeated_errors = On'; \
    echo 'ignore_repeated_source = Off'; \
    echo 'html_errors = Off'; \
    } > /usr/local/etc/php/conf.d/error-logging.ini

# taken from mkz71's comment on Wordpress official Docker Hub page
# https://hub.docker.com/_/wordpress/
RUN { \
    echo 'file_uploads = On'; \
    echo 'memory_limit = 256M'; \
    echo 'upload_max_filesize = 256M'; \
    echo 'post_max_size = 300M'; \
    echo 'max_execution_time = 600'; \
    } > /usr/local/etc/php/conf.d/uploads.ini

# Any additional settings
COPY ./config/php/php.ini /usr/local/etc/php/conf.d/app-php.ini

# Stage 2. Install app
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
WORKDIR /var/www/app
COPY ./app .
ENV COMPOSER_ALLOW_SUPERUSER=1
RUN composer install --no-scripts --no-autoloader --no-dev -vvv
RUN composer dump-autoload --optimize --no-scripts -vvv

# Stage 3. Configure app
COPY ./config/nginx/default.conf /etc/nginx/conf.d/default.conf
COPY ./config/nginx/nginx.conf /etc/nginx/nginx.conf
ARG NGINX_PORT="8080"
ARG NGINX_SERVER_NAME="localhost"
ARG FASTCGI_PASS_HOST="localhost"
RUN sed -i "s|{{NGINX_PORT}}|${NGINX_PORT}|g" /etc/nginx/conf.d/default.conf
RUN sed -i "s|{{NGINX_SERVER_NAME}}|${NGINX_SERVER_NAME}|g" /etc/nginx/conf.d/default.conf
RUN sed -i "s|{{FASTCGI_PASS_HOST}}|${FASTCGI_PASS_HOST}|g" /etc/nginx/conf.d/default.conf
RUN sed -i "s|'path' => \$path|'path' => '/var/www/app/web/'|g" /var/www/app/web/app/plugins/wp-file-manager/file_folder_manager.php
# RUN rm -rf /var/www/app/web/app/uploads
RUN whoami
RUN ls -l /var/www/app/web/app/ && chmod 777 /var/www/app/web/app/uploads && ls -l /var/www/app/web/app/
RUN mkdir -p /var/log/supervisord
COPY ./config/supervisord/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# From Railway env
ARG RAILWAY_SERVICE_NAME
ARG RAILWAY_ENVIRONMENT_NAME
ARG RAILWAY_PUBLIC_DOMAIN
ARG DATABASE_URL
ARG RAILWAY_RUN_UID

# For Bedrock
ARG AUTH_KEY
ARG SECURE_AUTH_KEY
ARG LOGGED_IN_KEY
ARG NONCE_KEY
ARG AUTH_SALT
ARG SECURE_AUTH_SALT
ARG LOGGED_IN_SALT
ARG NONCE_SALT

# For Wordpress
ARG WP_ENV
ARG WP_HOME
ARG WP_SITEURL

ENV WP_ENV=${WP_ENV} \
    WP_HOME=${WP_HOME}\
    WP_SITEURL="${WP_SITEURL}" \
    DATABASE_URL=${DATABASE_URL} \
    RAILWAY_RUN_UID=${RAILWAY_RUN_UID} \
    AUTH_KEY=${AUTH_KEY} \
    SECURE_AUTH_KEY=${SECURE_AUTH_KEY} \
    LOGGED_IN_KEY=${LOGGED_IN_KEY} \
    NONCE_KEY=${NONCE_KEY} \
    AUTH_SALT=${AUTH_SALT} \
    SECURE_AUTH_SALT=${SECURE_AUTH_SALT} \
    LOGGED_IN_SALT=${LOGGED_IN_SALT} \
    NONCE_SALT=${NONCE_SALT} \
    FORCE_SSL_ADMIN=true \
    DB_PREFIX="wp_"

EXPOSE 9000 8080

CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]
